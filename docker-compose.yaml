version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
      - mongodb
      - kibana
      - filebeat

  db:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prefect
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data

  prefect-server:
    image: prefecthq/prefect:2.14.11-python3.11
    restart: always
    volumes:
      - prefect_data:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      # If you want to access Prefect Server UI from anywhere other than the Docker host machine, you will need to change
      # PREFECT_UI_URL and PREFECT_API_URL to match the external hostname/IP of the host machine. For example:
      #- PREFECT_UI_URL=http://external-ip:4200/api
      #- PREFECT_API_URL=http://external-ip:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:postgres@db:5432/prefect
      # Uncomment the following line if you want to use the 'S3 Bucket' storage block instead of the older 'S3' storage
      # - EXTRA_PIP_PACKAGES=prefect-aws
    ports:
      - 4200:4200
    depends_on:
      - db

  ## Prefect Agent
  prefect-agent:
    image: prefecthq/prefect:2.14.11-python3.11
    restart: always
    entrypoint:
      [
        "/opt/prefect/entrypoint.sh",
        "prefect",
        "agent",
        "start",
        "-q",
        "YOUR_WORK_QUEUE_NAME",
      ]
    environment:
      - PREFECT_API_URL=http://server:4200/api
    #       Use PREFECT_API_KEY if connecting the agent to Prefect Cloud
    #     - PREFECT_API_KEY=YOUR_API_KEY

  ### Prefect CLI
  #   prefect-cli:
  #     image: prefecthq/prefect:2.14.11-python3.11
  #     entrypoint: "bash"
  #     working_dir: "/root/flows"
  #     volumes:
  #       - "./flows:/root/flows"
  #     environment:
  #       - PREFECT_API_URL=http://server:4200/api
  # #       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
  # #     - PREFECT_API_KEY=YOUR_API_KEY
  #     profiles: ["cli"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "${ES_PORT}:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:${ES_PORT}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    volumes:
      - ./filebeat:/usr/share/filebeat
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - elasticsearch
      - kibana

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana:/var/lib/grafana

volumes:
  elasticsearch-data:
    driver: local

  kibana-data:
    driver: local

  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./grafana_data
  postgres_data:
  prefect_data:
  db_data:
